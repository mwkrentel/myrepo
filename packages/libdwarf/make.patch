Fix a few things in Makefile.in.

1. Reorder the include files in CFLAGS to put the libdwarf directories
first.  We want libdwarf to use its own dwarf.h file instead of one
from elfutils or /usr.

2. Fix the build for gennames (HOSTCC) to always use the front-end gcc
compiler.  This was breaking the build in a cross-compile.

3. Disable errmsg_check so it can't break the build.


diff -Naurb dwarf-20170709.orig/libdwarf/Makefile.in dwarf-20170709/libdwarf/Makefile.in
--- dwarf-20170709.orig/libdwarf/Makefile.in	2017-05-27 11:38:35.000000000 -0500
+++ dwarf-20170709/libdwarf/Makefile.in	2017-11-20 14:09:10.756966649 -0600
@@ -42,7 +42,7 @@
 INSTALL_DATA =	@INSTALL_DATA@
 SHELL =		/bin/sh
 CC =		@CC@
-HOSTCC =	@CC@
+HOSTCC =	gcc
 AR =		@AR@
 # For use with BSD ar (MacOSX ar) edit the ARFLAGS to be -s
 #ARFLAGS =	@ARFLAGS@
@@ -56,10 +56,10 @@
 dwfsanitize =   @dwfsanitize@
 dwfzlib =       @dwfzlib@
 SONAME =        libdwarf.so.1
-CFLAGS =	$(PREINCS) @CPPFLAGS@ @CFLAGS@ $(INCLUDES) $(dwfpic) $(dwfwall) $(dwfsanitize)  $(POSTINCS)
+CFLAGS =	$(INCLUDES) @CPPFLAGS@ @CFLAGS@ $(dwfpic) $(dwfwall) $(dwfsanitize)
 LDFLAGS =	$(PRELIBS) @LDFLAGS@ $(dwfsanitize) $(POSTLIBS) 
-HOSTCFLAGS =	$(CFLAGS)
-HOSTLDFLAGS =	$(PRELIBS) @LDFLAGS@ 
+HOSTCFLAGS =	-g -O $(INCLUDES) @CPPFLAGS@
+HOSTLDFLAGS =
 
 # These three files are only appropriate for SGI IRIX.
 # There is no reason to think these are of any use to anyone else.
@@ -130,7 +130,7 @@
         pro_weaks.o
         
 
-all: gennames errmsg_check @build_shared@ @build_nonshared@
+all: gennames @build_shared@ @build_nonshared@
 
 libdwarf.a: dwarf_names.h dwarf_names.c  $(OBJS) dwarf_names.o
 	$(AR) $(ARFLAGS) $@ $(OBJS)  dwarf_names.o > ar-output-temp
